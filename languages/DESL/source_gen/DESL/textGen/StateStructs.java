package DESL.textGen;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SProperty;
import org.jetbrains.mps.openapi.language.SConcept;

public abstract class StateStructs {
  public static void stateStructs(SNode root, final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    for (SNode c : Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(root, LINKS.classes$SNAM), CONCEPTS.ClassDefinition$NR))) {

      if (SNodeOperations.isInstanceOf(root, CONCEPTS.RootSimM2M$x5) || SNodeOperations.isInstanceOf(root, CONCEPTS.UseM2M$UU)) {
        tgs.append("struct ");
        tgs.append(SPropertyOperations.getString(SLinkOperations.getTarget(c, LINKS.stateStruct$NqNO), PROPS.name$MnvL));
        tgs.append("{");
        tgs.newLine();
        ctx.getBuffer().area().increaseIndent();
        tgs.indent();
        tgs.append("struct rng_t *ctx;");
        tgs.newLine();
        for (SNode member : ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(c, LINKS.stateStruct$NqNO), LINKS.members$C59R))) {
          tgs.appendNode(member);
        }
        ctx.getBuffer().area().decreaseIndent();
        tgs.append("};");
        tgs.newLine();
      } else {
        tgs.appendNode(SLinkOperations.getTarget(c, LINKS.stateStruct$NqNO));
        tgs.newLine();
      }

    }
    tgs.newLine();
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink stateStruct$NqNO = MetaAdapterFactory.getContainmentLink(0xc4765525912b41b9L, 0xace4ce3b88117666L, 0x4117a694e5b8c1a0L, 0x4117a694e5b8c1a2L, "stateStruct");
    /*package*/ static final SContainmentLink members$C59R = MetaAdapterFactory.getContainmentLink(0xefda956e491e4f00L, 0xba1436af2f213ecfL, 0x6285e27d4ff6c9f5L, 0x6285e27d4ff7db92L, "members");
    /*package*/ static final SContainmentLink classes$SNAM = MetaAdapterFactory.getContainmentLink(0xc4765525912b41b9L, 0xace4ce3b88117666L, 0x1ada9a09174c9630L, 0x4117a694e5ba8536L, "classes");
  }

  private static final class PROPS {
    /*package*/ static final SProperty name$MnvL = MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name");
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept UseM2M$UU = MetaAdapterFactory.getConcept(0xc4765525912b41b9L, 0xace4ce3b88117666L, 0x4111dd2682dce668L, "DESL.structure.UseM2M");
    /*package*/ static final SConcept RootSimM2M$x5 = MetaAdapterFactory.getConcept(0xc4765525912b41b9L, 0xace4ce3b88117666L, 0x2e66f9a61334f363L, "DESL.structure.RootSimM2M");
    /*package*/ static final SConcept ClassDefinition$NR = MetaAdapterFactory.getConcept(0xc4765525912b41b9L, 0xace4ce3b88117666L, 0x4117a694e5b8c1a0L, "DESL.structure.ClassDefinition");
  }
}
