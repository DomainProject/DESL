package DESL.textGen;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.jetbrains.mps.openapi.language.SReferenceLink;
import org.jetbrains.mps.openapi.language.SProperty;

public abstract class UpdateCheckpoint {
  public static void UpdateCheckpoint(SNode statement, final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    UpdateCheckpoint.update(statement, ctx);
  }
  protected static void update(SNode statement, final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    {
      final SNode expressionStatement = statement;
      if (SNodeOperations.isInstanceOf(expressionStatement, CONCEPTS.ExpressionStatement$SU)) {
        {
          final SNode assignmentExpr = SLinkOperations.getTarget(expressionStatement, LINKS.expr$vamr);
          if (SNodeOperations.isInstanceOf(assignmentExpr, CONCEPTS.AssignmentExpr$mZ)) {
            {
              final SNode functionCall = SLinkOperations.getTarget(assignmentExpr, LINKS.right$Slc$);
              if (SNodeOperations.isInstanceOf(functionCall, CONCEPTS.FunctionCall$4q)) {
                if (SPropertyOperations.getString(SLinkOperations.getTarget(functionCall, LINKS.function$oBh5), PROPS.name$MnvL) == "allocation") {
                  tgs.indent();
                  tgs.append("content->cp.channel_to_free = ");
                  tgs.appendNode(SLinkOperations.getTarget(assignmentExpr, LINKS.left$SkXz));
                  tgs.append(";");
                  tgs.newLine();
                }
              }
            }
          }
        }
        {
          final SNode functionCall = SLinkOperations.getTarget(expressionStatement, LINKS.expr$vamr);
          if (SNodeOperations.isInstanceOf(functionCall, CONCEPTS.FunctionCall$4q)) {
            if (SPropertyOperations.getString(SLinkOperations.getTarget(functionCall, LINKS.function$oBh5), PROPS.name$MnvL) == "deallocation") {
              tgs.indent();
              tgs.append("content->cp.channel_to_reallocate = ");
              tgs.appendNode(ListSequence.fromList(SLinkOperations.getChildren(functionCall, LINKS.actuals$oBJ7)).getElement(2));
              tgs.append(";");
              tgs.newLine();
            }
          }
        }
      }
    }

    // todo this only works in the current configuration

    {
      final SNode ifStatement = statement;
      if (SNodeOperations.isInstanceOf(ifStatement, CONCEPTS.IfStatement$IE)) {
        for (SNode stmt : ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(ifStatement, LINKS.thenPart$f_ts), LINKS.statements$euTV))) {
          UpdateCheckpoint.update(stmt, ctx);
        }
        for (SNode stmt : ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(SLinkOperations.getTarget(ifStatement, LINKS.elsePart$9DfV), LINKS.body$b0fg), LINKS.statements$euTV))) {
          UpdateCheckpoint.update(stmt, ctx);
        }
      }
    }
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept ExpressionStatement$SU = MetaAdapterFactory.getConcept(0xa9d696470840491eL, 0xbf392eb0805d2011L, 0x64ae61a4018a8592L, "com.mbeddr.core.statements.structure.ExpressionStatement");
    /*package*/ static final SConcept AssignmentExpr$mZ = MetaAdapterFactory.getConcept(0x61c69711ed614850L, 0x81d97714ff227fb0L, 0x4e85add925440dL, "com.mbeddr.core.expressions.structure.AssignmentExpr");
    /*package*/ static final SConcept FunctionCall$4q = MetaAdapterFactory.getConcept(0x6d11763d483d4b2bL, 0x8efc09336c1b0001L, 0x52941adca601b38cL, "com.mbeddr.core.modules.structure.FunctionCall");
    /*package*/ static final SConcept IfStatement$IE = MetaAdapterFactory.getConcept(0xa9d696470840491eL, 0xbf392eb0805d2011L, 0x5718179e5b1bb7d7L, "com.mbeddr.core.statements.structure.IfStatement");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink expr$vamr = MetaAdapterFactory.getContainmentLink(0xa9d696470840491eL, 0xbf392eb0805d2011L, 0x64ae61a4018a8592L, 0x64ae61a4018a8593L, "expr");
    /*package*/ static final SContainmentLink right$Slc$ = MetaAdapterFactory.getContainmentLink(0x61c69711ed614850L, 0x81d97714ff227fb0L, 0x7af69e2e83a1ba34L, 0x7af69e2e83a1ba41L, "right");
    /*package*/ static final SContainmentLink left$SkXz = MetaAdapterFactory.getContainmentLink(0x61c69711ed614850L, 0x81d97714ff227fb0L, 0x7af69e2e83a1ba34L, 0x7af69e2e83a1ba40L, "left");
    /*package*/ static final SReferenceLink function$oBh5 = MetaAdapterFactory.getReferenceLink(0x6d11763d483d4b2bL, 0x8efc09336c1b0001L, 0x52941adca601b38cL, 0x52941adca601b38dL, "function");
    /*package*/ static final SContainmentLink actuals$oBJ7 = MetaAdapterFactory.getContainmentLink(0x6d11763d483d4b2bL, 0x8efc09336c1b0001L, 0x52941adca601b38cL, 0x52941adca601b38fL, "actuals");
    /*package*/ static final SContainmentLink thenPart$f_ts = MetaAdapterFactory.getContainmentLink(0xa9d696470840491eL, 0xbf392eb0805d2011L, 0x5718179e5b1bb7d7L, 0x5718179e5b1bb7d9L, "thenPart");
    /*package*/ static final SContainmentLink statements$euTV = MetaAdapterFactory.getContainmentLink(0xa9d696470840491eL, 0xbf392eb0805d2011L, 0x3a16e3a9c7ad9955L, 0x3a16e3a9c7ad9956L, "statements");
    /*package*/ static final SContainmentLink elsePart$9DfV = MetaAdapterFactory.getContainmentLink(0xa9d696470840491eL, 0xbf392eb0805d2011L, 0x5718179e5b1bb7d7L, 0x2b8026b23bc2442bL, "elsePart");
    /*package*/ static final SContainmentLink body$b0fg = MetaAdapterFactory.getContainmentLink(0xa9d696470840491eL, 0xbf392eb0805d2011L, 0x14bcec604136b8e6L, 0x14bcec604136ba31L, "body");
  }

  private static final class PROPS {
    /*package*/ static final SProperty name$MnvL = MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name");
  }
}
