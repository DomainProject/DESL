package DESL.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenDescriptorBase;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SContainmentLink;

public class FunctionDocs_TextGen extends TextGenDescriptorBase {
  @Override
  public void generateText(final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    tgs.append("Function `");
    tgs.append(SPropertyOperations.getString(ctx.getPrimaryInput(), PROPS.functionName$h8v$));
    tgs.append("`:");
    tgs.newLine();
    if ((SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.description$lsoR) != null)) {
      tgs.append("- **Description**: ");
      tgs.append(SPropertyOperations.getString(SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.description$lsoR), PROPS.value$w7MM));
      tgs.newLine();
    }
    tgs.append("- **Parameters**:");
    tgs.newLine();
    ctx.getBuffer().area().increaseIndent();
    for (SNode parameter : ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.parametersDescription$HNUz))) {
      tgs.indent();
      tgs.append("- ");
      tgs.appendNode(parameter);
      tgs.newLine();
    }
    ctx.getBuffer().area().decreaseIndent();
    tgs.append("- **Return Type**: `");
    tgs.appendNode(SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.returnType$hdDU));
    tgs.append("`");
    tgs.newLine();
    if ((SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.notes$aDh9) != null)) {
      tgs.append("- **Notes**:");
      tgs.newLine();
      ctx.getBuffer().area().increaseIndent();
      tgs.indent();
      tgs.append("-");
      tgs.indent();
      tgs.appendNode(SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.notes$aDh9));
      ctx.getBuffer().area().decreaseIndent();
    }
  }

  private static final class PROPS {
    /*package*/ static final SProperty functionName$h8v$ = MetaAdapterFactory.getProperty(0xc4765525912b41b9L, 0xace4ce3b88117666L, 0x6579f899e5d7c058L, 0x302e780ea4ef54dbL, "functionName");
    /*package*/ static final SProperty value$w7MM = MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, "value");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink description$lsoR = MetaAdapterFactory.getContainmentLink(0xc4765525912b41b9L, 0xace4ce3b88117666L, 0x6579f899e5fee6d4L, 0x6579f899e5fee6d9L, "description");
    /*package*/ static final SContainmentLink parametersDescription$HNUz = MetaAdapterFactory.getContainmentLink(0xc4765525912b41b9L, 0xace4ce3b88117666L, 0x6579f899e5d7c058L, 0x6579f899e5d7c05eL, "parametersDescription");
    /*package*/ static final SContainmentLink returnType$hdDU = MetaAdapterFactory.getContainmentLink(0xc4765525912b41b9L, 0xace4ce3b88117666L, 0x6579f899e5d7c058L, 0x302e780ea4ef54dcL, "returnType");
    /*package*/ static final SContainmentLink notes$aDh9 = MetaAdapterFactory.getContainmentLink(0xc4765525912b41b9L, 0xace4ce3b88117666L, 0x6579f899e5fee6d4L, 0x6579f899e5d7c34cL, "notes");
  }
}
