package RootSimM2M.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptRootSimRoot = createDescriptorForRootSimRoot();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xc4765525912b41b9L, 0xace4ce3b88117666L, "SimpleDES");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptRootSimRoot);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.RootSimRoot:
        return myConceptRootSimRoot;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForRootSimRoot() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("RootSimM2M", "RootSimRoot", 0xb7816371398c4b20L, 0x89ef1cb57001fbefL, 0x2e66f9a613a5e0daL);
    b.class_(false, false, true);
    // extends: SimpleDES.structure.DESModel
    b.super_(0xc4765525912b41b9L, 0xace4ce3b88117666L, 0x1ada9a09174c9630L);
    b.origin("r:067df253-ee30-4c61-bfbd-d413c1c1c533(RootSimM2M.structure)/3343634265058697434");
    b.version(3);
    return b.create();
  }
}
