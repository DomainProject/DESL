package DESL.listeners;

/*Generated by MPS */

import com.mbeddr.mpsutil.modellisteners.runtime.IModelListenersDescriptor;
import com.mbeddr.mpsutil.modellisteners.runtime.IModelListener;
import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import com.mbeddr.mpsutil.modellisteners.runtime.PropertyListener;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SProperty;

public class ModelListenersDescriptor implements IModelListenersDescriptor {
  public ModelListenersDescriptor() {
  }

  public Iterable<IModelListener> getListeners() {
    List<IModelListener> listeners = ListSequence.fromList(new ArrayList<IModelListener>());

    ListSequence.fromList(listeners).addElement(new PropertyListener(CONCEPTS.StructDeclaration$ox, PROPS.name$MnvL) {
      @Override
      public void propertyChanged(final SNode instance, String propertyName, String oldValue, String newValue) {
      }
    });

    return listeners;
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept StructDeclaration$ox = MetaAdapterFactory.getConcept(0xefda956e491e4f00L, 0xba1436af2f213ecfL, 0x58bef62304fc0a2fL, "com.mbeddr.core.udt.structure.StructDeclaration");
  }

  private static final class PROPS {
    /*package*/ static final SProperty name$MnvL = MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name");
  }
}
