package DESL.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int ClassDefinition = 0;
  public static final int CreateArray = 1;
  public static final int DESLModel = 2;
  public static final int DocsEntry = 3;
  public static final int DocsM2M = 4;
  public static final int EmptyLine = 5;
  public static final int EventDefinition = 6;
  public static final int EventDocs = 7;
  public static final int EventHandler = 8;
  public static final int EventHandlerDocs = 9;
  public static final int EventType = 10;
  public static final int Expent = 11;
  public static final int ExternalFunction = 12;
  public static final int ExternalFunctionPrototype = 13;
  public static final int ExternalMacro = 14;
  public static final int ExternalStructDefinition = 15;
  public static final int FunctionDocs = 16;
  public static final int GetRandContext = 17;
  public static final int GetReceiver = 18;
  public static final int GlobalVarDecl = 19;
  public static final int Header = 20;
  public static final int IClassDefinition = 21;
  public static final int IDocs = 22;
  public static final int IDocsElement = 23;
  public static final int IEventDefinition = 24;
  public static final int IExternalFunction = 25;
  public static final int IFiller = 26;
  public static final int IGlobalVarDecl = 27;
  public static final int IHandler = 28;
  public static final int IMacro = 29;
  public static final int IProcessAllocation = 30;
  public static final int IProcessList = 31;
  public static final int IStartupFunction = 32;
  public static final int IStructDefinition = 33;
  public static final int ITerminationFunction = 34;
  public static final int IText = 35;
  public static final int ITypeDefinition = 36;
  public static final int IVariableDeclarationSmartReference = 37;
  public static final int InitRandomContext = 38;
  public static final int InitTopology = 39;
  public static final int InitializeState = 40;
  public static final int Item = 41;
  public static final int ItemList = 42;
  public static final int MacroFunction = 43;
  public static final int MacroVariable = 44;
  public static final int NewStruct = 45;
  public static final int ParameterDocs = 46;
  public static final int PlainText = 47;
  public static final int Printf = 48;
  public static final int ProcessAllocation = 49;
  public static final int ProcessArray = 50;
  public static final int ProcessSequence = 51;
  public static final int Random = 52;
  public static final int ReleaseStruct = 53;
  public static final int RngType = 54;
  public static final int RootSimM2M = 55;
  public static final int RossM2M = 56;
  public static final int SendEvent = 57;
  public static final int StartupFunction = 58;
  public static final int StartupHandler = 59;
  public static final int StructDefinition = 60;
  public static final int StructDocs = 61;
  public static final int StructMemberDocs = 62;
  public static final int TerminationFunction = 63;
  public static final int TypeDefinition = 64;
  public static final int UseM2M = 65;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xc4765525912b41b9L, 0xace4ce3b88117666L);
    builder.put(0x4117a694e5b8c1a0L, ClassDefinition);
    builder.put(0x6ea143d20956bff1L, CreateArray);
    builder.put(0x1ada9a09174c9630L, DESLModel);
    builder.put(0x4ba181fb08223decL, DocsEntry);
    builder.put(0x2e66f9a61334f362L, DocsM2M);
    builder.put(0x6eb40d65f30e6838L, EmptyLine);
    builder.put(0x2e66f9a613f69c80L, EventDefinition);
    builder.put(0x2e66f9a613f69c83L, EventDocs);
    builder.put(0x2dc3a690836fd0d0L, EventHandler);
    builder.put(0x74d88000542f2672L, EventHandlerDocs);
    builder.put(0x7c2c5977e3e10df9L, EventType);
    builder.put(0x2476b4949807b947L, Expent);
    builder.put(0x6f36cc77d0c6228bL, ExternalFunction);
    builder.put(0x6f36cc77d0c6228cL, ExternalFunctionPrototype);
    builder.put(0x28a47bf149ea91f0L, ExternalMacro);
    builder.put(0x5808433cc497c579L, ExternalStructDefinition);
    builder.put(0x6579f899e5d7c058L, FunctionDocs);
    builder.put(0x23bd070ad1586743L, GetRandContext);
    builder.put(0x2476b4949a0e59c3L, GetReceiver);
    builder.put(0x4ba181fb0880155eL, GlobalVarDecl);
    builder.put(0x4ba181fb080e4adfL, Header);
    builder.put(0x55132e9dcba02ae0L, IClassDefinition);
    builder.put(0x6579f899e5fee6d4L, IDocs);
    builder.put(0x4ba181fb080e4addL, IDocsElement);
    builder.put(0x4ba181fb08668351L, IEventDefinition);
    builder.put(0x6f36cc77d0c630e1L, IExternalFunction);
    builder.put(0x4ba181fb07970182L, IFiller);
    builder.put(0x4ba181fb08818b7dL, IGlobalVarDecl);
    builder.put(0x6eb40d65f333345bL, IHandler);
    builder.put(0x74450034d00e6944L, IMacro);
    builder.put(0x55132e9dcbcc539bL, IProcessAllocation);
    builder.put(0x4117a694e64ff7baL, IProcessList);
    builder.put(0x1c3fbbed3bec8f94L, IStartupFunction);
    builder.put(0x5808433cc497c578L, IStructDefinition);
    builder.put(0x148075313bb54673L, ITerminationFunction);
    builder.put(0x4ba181fb080e4af7L, IText);
    builder.put(0x4ba181fb0873ae25L, ITypeDefinition);
    builder.put(0x7c4e47104881c839L, IVariableDeclarationSmartReference);
    builder.put(0x2476b494986e149bL, InitRandomContext);
    builder.put(0x1a36c02200c1a246L, InitTopology);
    builder.put(0x6ea143d2092cc82fL, InitializeState);
    builder.put(0x4ba181fb0817d766L, Item);
    builder.put(0x4ba181fb080e4af6L, ItemList);
    builder.put(0x74450034d00e6947L, MacroFunction);
    builder.put(0x74450034d00e6945L, MacroVariable);
    builder.put(0x2e28a92d075e35d5L, NewStruct);
    builder.put(0x6579f899e5d7c060L, ParameterDocs);
    builder.put(0x4ba181fb080e4aecL, PlainText);
    builder.put(0x7c4e47104881c837L, Printf);
    builder.put(0x4117a694e6393783L, ProcessAllocation);
    builder.put(0x4117a694e6486788L, ProcessArray);
    builder.put(0x4117a694e64867a6L, ProcessSequence);
    builder.put(0x2476b4949807b946L, Random);
    builder.put(0x9e7f826fe6178f6L, ReleaseStruct);
    builder.put(0x23bd070ad14172a2L, RngType);
    builder.put(0x2e66f9a61334f363L, RootSimM2M);
    builder.put(0x7dd219cad75cd6eeL, RossM2M);
    builder.put(0x68458b9b5da4ec77L, SendEvent);
    builder.put(0x6f36cc77d0a48d39L, StartupFunction);
    builder.put(0x6ea143d20905c7ecL, StartupHandler);
    builder.put(0x5808433cc497c577L, StructDefinition);
    builder.put(0x4328447c790cec2cL, StructDocs);
    builder.put(0x4328447c790cec2dL, StructMemberDocs);
    builder.put(0x148075313bb5466dL, TerminationFunction);
    builder.put(0x4ba181fb0873ae26L, TypeDefinition);
    builder.put(0x4111dd2682dce668L, UseM2M);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
