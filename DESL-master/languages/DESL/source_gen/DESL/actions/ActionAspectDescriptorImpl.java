package DESL.actions;

/*Generated by MPS */

import jetbrains.mps.actions.descriptor.BaseActionAspectDescriptor;
import jetbrains.mps.openapi.actions.descriptor.ActionAspectDescriptor;
import java.util.Collection;
import jetbrains.mps.openapi.actions.descriptor.NodeFactory;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Collections;

public class ActionAspectDescriptorImpl extends BaseActionAspectDescriptor implements ActionAspectDescriptor {
  private static final String LANGUAGE_FQ_NAME = "DESL";

  @Override
  public Collection<NodeFactory> getFactories(SAbstractConcept concept) {
    if (LANGUAGE_FQ_NAME.equals(concept.getLanguage().getQualifiedName())) {
      switch (concept.getName()) {
        case "DESLModel":
          return Collections.<NodeFactory>singletonList(new DESModelFactory.NodeFactory_3297662491776892432());
        case "EventHandler":
          return Collections.<NodeFactory>singletonList(new HandlerFactory.NodeFactory_5103575337110310022());
        case "StartupFunction":
          return Collections.<NodeFactory>singletonList(new StartupFunctionFactory.NodeFactory_8013817401925998386());
        case "StartupHandler":
          return Collections.<NodeFactory>singletonList(new StartupHandlerFactory.NodeFactory_7971727384798017761());
        case "TerminationFunction":
          return Collections.<NodeFactory>singletonList(new TerminationFunctionFactory.NodeFactory_1477309532093105809());
        default:
      }
    }
    return Collections.<NodeFactory>emptyList();
  }

}
